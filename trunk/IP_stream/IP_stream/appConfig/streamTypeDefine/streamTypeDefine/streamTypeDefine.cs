////////////////////////////////////////////////////////////////////////
//
// streamTypeDefine.cs
//
// This file was generated by XMLSpy 2008r2sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace streamTypeDefine
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}


	public class streamTypeDefine2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_streamTypeDefine2]); }}


		public static streamTypeDefine2 LoadFromFile(string filename) 
		{
			return new streamTypeDefine2(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static streamTypeDefine2 LoadFromString(string xmlstring) 
		{
			return new streamTypeDefine2(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static streamTypeDefine2 LoadFromBinary(byte[] binary) 
		{
			return new streamTypeDefine2(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding)
		{
			SaveToFile( filename, prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public string SaveToString(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static streamTypeDefine2 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static streamTypeDefine2 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new streamTypeDefine2(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}
	
	
		public streamTypeDefine2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			HttpWspUriType = new MemberElement_HttpWspUriType (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_HttpWspUriType]);
			Protocol = new MemberElement_Protocol (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_Protocol]);
			ProtocolType3 = new MemberElement_ProtocolType3 (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_ProtocolType3]);
			Protocols = new MemberElement_Protocols (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_Protocols]);
			Response = new MemberElement_Response (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_Response]);
			ResponseType3 = new MemberElement_ResponseType3 (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_ResponseType3]);
			Responses = new MemberElement_Responses (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_Responses]);
			StreamIdentification = new MemberElement_StreamIdentification (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_StreamIdentification]);
			TcpPortType = new MemberElement_TcpPortType (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_TcpPortType]);
			port = new MemberElement_port (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_port]);
			ports = new MemberElement_ports (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_ports]);
			uris = new MemberElement_uris (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_uris]);
			url = new MemberElement_url (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_streamTypeDefine2_altova_url]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new streamTypeDefine2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_HttpWspUriType HttpWspUriType;
		public class MemberElement_HttpWspUriType : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_HttpWspUriType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public HttpWspUriTypeType this [int i] { get { return At(i);} } 
			public HttpWspUriTypeType At(int index) {return new HttpWspUriTypeType(owner.GetElementAt(info, index));}
			public HttpWspUriTypeType First { get  {return new HttpWspUriTypeType(owner.GetElementFirst(info));} }
			public HttpWspUriTypeType Last { get {return new HttpWspUriTypeType(owner.GetElementLast(info));} }
			public HttpWspUriTypeType Append(){return new HttpWspUriTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new HttpWspUriTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Protocol Protocol;
		public class MemberElement_Protocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolType this [int i] { get { return At(i);} } 
			public ProtocolType At(int index) {return new ProtocolType(owner.GetElementAt(info, index));}
			public ProtocolType First { get  {return new ProtocolType(owner.GetElementFirst(info));} }
			public ProtocolType Last { get {return new ProtocolType(owner.GetElementLast(info));} }
			public ProtocolType Append(){return new ProtocolType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ProtocolType3 ProtocolType3;
		public class MemberElement_ProtocolType3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ProtocolType3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolTypeType this [int i] { get { return At(i);} } 
			public ProtocolTypeType At(int index) {return new ProtocolTypeType(owner.GetElementAt(info, index));}
			public ProtocolTypeType First { get  {return new ProtocolTypeType(owner.GetElementFirst(info));} }
			public ProtocolTypeType Last { get {return new ProtocolTypeType(owner.GetElementLast(info));} }
			public ProtocolTypeType Append(){return new ProtocolTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Protocols Protocols;
		public class MemberElement_Protocols : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocols (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolsType this [int i] { get { return At(i);} } 
			public ProtocolsType At(int index) {return new ProtocolsType(owner.GetElementAt(info, index));}
			public ProtocolsType First { get  {return new ProtocolsType(owner.GetElementFirst(info));} }
			public ProtocolsType Last { get {return new ProtocolsType(owner.GetElementLast(info));} }
			public ProtocolsType Append(){return new ProtocolsType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Response Response;
		public class MemberElement_Response : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Response (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponseType this [int i] { get { return At(i);} } 
			public ResponseType At(int index) {return new ResponseType(owner.GetElementAt(info, index));}
			public ResponseType First { get  {return new ResponseType(owner.GetElementFirst(info));} }
			public ResponseType Last { get {return new ResponseType(owner.GetElementLast(info));} }
			public ResponseType Append(){return new ResponseType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ResponseType3 ResponseType3;
		public class MemberElement_ResponseType3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ResponseType3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponseTypeType this [int i] { get { return At(i);} } 
			public ResponseTypeType At(int index) {return new ResponseTypeType(owner.GetElementAt(info, index));}
			public ResponseTypeType First { get  {return new ResponseTypeType(owner.GetElementFirst(info));} }
			public ResponseTypeType Last { get {return new ResponseTypeType(owner.GetElementLast(info));} }
			public ResponseTypeType Append(){return new ResponseTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponseTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Responses Responses;
		public class MemberElement_Responses : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Responses (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponsesType this [int i] { get { return At(i);} } 
			public ResponsesType At(int index) {return new ResponsesType(owner.GetElementAt(info, index));}
			public ResponsesType First { get  {return new ResponsesType(owner.GetElementFirst(info));} }
			public ResponsesType Last { get {return new ResponsesType(owner.GetElementLast(info));} }
			public ResponsesType Append(){return new ResponsesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponsesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StreamIdentification StreamIdentification;
		public class MemberElement_StreamIdentification : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StreamIdentification (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public StreamIdentificationType this [int i] { get { return At(i);} } 
			public StreamIdentificationType At(int index) {return new StreamIdentificationType(owner.GetElementAt(info, index));}
			public StreamIdentificationType First { get  {return new StreamIdentificationType(owner.GetElementFirst(info));} }
			public StreamIdentificationType Last { get {return new StreamIdentificationType(owner.GetElementLast(info));} }
			public StreamIdentificationType Append(){return new StreamIdentificationType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new StreamIdentificationType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TcpPortType TcpPortType;
		public class MemberElement_TcpPortType : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TcpPortType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TcpPortTypeType this [int i] { get { return At(i);} } 
			public TcpPortTypeType At(int index) {return new TcpPortTypeType(owner.GetElementAt(info, index));}
			public TcpPortTypeType First { get  {return new TcpPortTypeType(owner.GetElementFirst(info));} }
			public TcpPortTypeType Last { get {return new TcpPortTypeType(owner.GetElementLast(info));} }
			public TcpPortTypeType Append(){return new TcpPortTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TcpPortTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_port port;
		public class MemberElement_port : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_port (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public portType this [int i] { get { return At(i);} } 
			public portType At(int index) {return new portType(owner.GetElementAt(info, index));}
			public portType First { get  {return new portType(owner.GetElementFirst(info));} }
			public portType Last { get {return new portType(owner.GetElementLast(info));} }
			public portType Append(){return new portType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new portType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ports ports;
		public class MemberElement_ports : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ports (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public portsType this [int i] { get { return At(i);} } 
			public portsType At(int index) {return new portsType(owner.GetElementAt(info, index));}
			public portsType First { get  {return new portsType(owner.GetElementFirst(info));} }
			public portsType Last { get {return new portsType(owner.GetElementLast(info));} }
			public portsType Append(){return new portsType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new portsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_uris uris;
		public class MemberElement_uris : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_uris (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public urisType this [int i] { get { return At(i);} } 
			public urisType At(int index) {return new urisType(owner.GetElementAt(info, index));}
			public urisType First { get  {return new urisType(owner.GetElementFirst(info));} }
			public urisType Last { get {return new urisType(owner.GetElementLast(info));} }
			public urisType Append(){return new urisType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new urisType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_url url;
		public class MemberElement_url : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_url (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public urlType this [int i] { get { return At(i);} } 
			public urlType At(int index) {return new urlType(owner.GetElementAt(info, index));}
			public urlType First { get  {return new urlType(owner.GetElementFirst(info));} }
			public urlType Last { get {return new urlType(owner.GetElementLast(info));} }
			public urlType Append(){return new urlType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new urlType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("streamTypeDefine", "")); 				
		}
		
	} // class streamTypeDefine2
	public class HttpWspUriTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_HttpWspUriTypeType]); }}

	
		public HttpWspUriTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			uris = new MemberElement_uris (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_HttpWspUriTypeType_altova_uris]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new HttpWspUriTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_uris uris;
		public class MemberElement_uris : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_uris (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public urisType this [int i] { get { return At(i);} } 
			public urisType At(int index) {return new urisType(owner.GetElementAt(info, index));}
			public urisType First { get  {return new urisType(owner.GetElementFirst(info));} }
			public urisType Last { get {return new urisType(owner.GetElementLast(info));} }
			public urisType Append(){return new urisType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new urisType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class HttpWspUriTypeType
	public class urisType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_urisType]); }}

	
		public urisType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			name = new MemberAttribute_name (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_urisType_altova_name]);

			url = new MemberElement_url (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_urisType_altova_url]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new urisType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public MemberAttribute_name name;
		public class MemberAttribute_name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_url url;
		public class MemberElement_url : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_url (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public urlType this [int i] { get { return At(i);} } 
			public urlType At(int index) {return new urlType(owner.GetElementAt(info, index));}
			public urlType First { get  {return new urlType(owner.GetElementFirst(info));} }
			public urlType Last { get {return new urlType(owner.GetElementLast(info));} }
			public urlType Append(){return new urlType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new urlType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class urisType
	public class ProtocolType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ProtocolType]); }}

	
		public ProtocolType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ProtocolType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ProtocolType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ProtocolType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class ProtocolType
	public class ProtocolType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ProtocolType2]); }}

	
		public ProtocolType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ProtocolType2
	public class ProtocolTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ProtocolTypeType]); }}

	
		public ProtocolTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Protocols = new MemberElement_Protocols (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ProtocolTypeType_altova_Protocols]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ProtocolTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Protocols Protocols;
		public class MemberElement_Protocols : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocols (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolsType this [int i] { get { return At(i);} } 
			public ProtocolsType At(int index) {return new ProtocolsType(owner.GetElementAt(info, index));}
			public ProtocolsType First { get  {return new ProtocolsType(owner.GetElementFirst(info));} }
			public ProtocolsType Last { get {return new ProtocolsType(owner.GetElementLast(info));} }
			public ProtocolsType Append(){return new ProtocolsType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ProtocolTypeType
	public class ProtocolsType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ProtocolsType]); }}

	
		public ProtocolsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			name = new MemberAttribute_name (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ProtocolsType_altova_name]);

			Protocol = new MemberElement_Protocol (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ProtocolsType_altova_Protocol]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ProtocolsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public MemberAttribute_name name;
		public class MemberAttribute_name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Protocol Protocol;
		public class MemberElement_Protocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolType this [int i] { get { return At(i);} } 
			public ProtocolType At(int index) {return new ProtocolType(owner.GetElementAt(info, index));}
			public ProtocolType First { get  {return new ProtocolType(owner.GetElementFirst(info));} }
			public ProtocolType Last { get {return new ProtocolType(owner.GetElementLast(info));} }
			public ProtocolType Append(){return new ProtocolType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ProtocolsType
	public class ResponseType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ResponseType]); }}

	
		public ResponseType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ResponseType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ResponseType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ResponseType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class ResponseType
	public class ResponseType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ResponseType2]); }}

	
		public ResponseType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ResponseType2
	public class ResponseTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ResponseTypeType]); }}

	
		public ResponseTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Responses = new MemberElement_Responses (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ResponseTypeType_altova_Responses]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ResponseTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Responses Responses;
		public class MemberElement_Responses : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Responses (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponsesType this [int i] { get { return At(i);} } 
			public ResponsesType At(int index) {return new ResponsesType(owner.GetElementAt(info, index));}
			public ResponsesType First { get  {return new ResponsesType(owner.GetElementFirst(info));} }
			public ResponsesType Last { get {return new ResponsesType(owner.GetElementLast(info));} }
			public ResponsesType Append(){return new ResponsesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponsesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ResponseTypeType
	public class ResponsesType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_ResponsesType]); }}

	
		public ResponsesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			name = new MemberAttribute_name (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ResponsesType_altova_name]);

			Response = new MemberElement_Response (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_ResponsesType_altova_Response]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ResponsesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public MemberAttribute_name name;
		public class MemberAttribute_name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Response Response;
		public class MemberElement_Response : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Response (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponseType this [int i] { get { return At(i);} } 
			public ResponseType At(int index) {return new ResponseType(owner.GetElementAt(info, index));}
			public ResponseType First { get  {return new ResponseType(owner.GetElementFirst(info));} }
			public ResponseType Last { get {return new ResponseType(owner.GetElementLast(info));} }
			public ResponseType Append(){return new ResponseType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponseType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ResponsesType
	public class StreamIdentificationType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_StreamIdentificationType]); }}

	
		public StreamIdentificationType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			TcpPortType = new MemberElement_TcpPortType (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_StreamIdentificationType_altova_TcpPortType]);
			HttpWspUriType = new MemberElement_HttpWspUriType (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_StreamIdentificationType_altova_HttpWspUriType]);
			ResponseType3 = new MemberElement_ResponseType3 (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_StreamIdentificationType_altova_ResponseType3]);
			ProtocolType3 = new MemberElement_ProtocolType3 (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_StreamIdentificationType_altova_ProtocolType3]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new StreamIdentificationType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_TcpPortType TcpPortType;
		public class MemberElement_TcpPortType : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TcpPortType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public TcpPortTypeType this [int i] { get { return At(i);} } 
			public TcpPortTypeType At(int index) {return new TcpPortTypeType(owner.GetElementAt(info, index));}
			public TcpPortTypeType First { get  {return new TcpPortTypeType(owner.GetElementFirst(info));} }
			public TcpPortTypeType Last { get {return new TcpPortTypeType(owner.GetElementLast(info));} }
			public TcpPortTypeType Append(){return new TcpPortTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new TcpPortTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_HttpWspUriType HttpWspUriType;
		public class MemberElement_HttpWspUriType : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_HttpWspUriType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public HttpWspUriTypeType this [int i] { get { return At(i);} } 
			public HttpWspUriTypeType At(int index) {return new HttpWspUriTypeType(owner.GetElementAt(info, index));}
			public HttpWspUriTypeType First { get  {return new HttpWspUriTypeType(owner.GetElementFirst(info));} }
			public HttpWspUriTypeType Last { get {return new HttpWspUriTypeType(owner.GetElementLast(info));} }
			public HttpWspUriTypeType Append(){return new HttpWspUriTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new HttpWspUriTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ResponseType3 ResponseType3;
		public class MemberElement_ResponseType3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ResponseType3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ResponseTypeType this [int i] { get { return At(i);} } 
			public ResponseTypeType At(int index) {return new ResponseTypeType(owner.GetElementAt(info, index));}
			public ResponseTypeType First { get  {return new ResponseTypeType(owner.GetElementFirst(info));} }
			public ResponseTypeType Last { get {return new ResponseTypeType(owner.GetElementLast(info));} }
			public ResponseTypeType Append(){return new ResponseTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ResponseTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ProtocolType3 ProtocolType3;
		public class MemberElement_ProtocolType3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ProtocolType3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolTypeType this [int i] { get { return At(i);} } 
			public ProtocolTypeType At(int index) {return new ProtocolTypeType(owner.GetElementAt(info, index));}
			public ProtocolTypeType First { get  {return new ProtocolTypeType(owner.GetElementFirst(info));} }
			public ProtocolTypeType Last { get {return new ProtocolTypeType(owner.GetElementLast(info));} }
			public ProtocolTypeType Append(){return new ProtocolTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class StreamIdentificationType
	public class TcpPortTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_TcpPortTypeType]); }}

	
		public TcpPortTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			ports = new MemberElement_ports (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_TcpPortTypeType_altova_ports]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TcpPortTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_ports ports;
		public class MemberElement_ports : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ports (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public portsType this [int i] { get { return At(i);} } 
			public portsType At(int index) {return new portsType(owner.GetElementAt(info, index));}
			public portsType First { get  {return new portsType(owner.GetElementFirst(info));} }
			public portsType Last { get {return new portsType(owner.GetElementLast(info));} }
			public portsType Append(){return new portsType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new portsType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class TcpPortTypeType
	public class portType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_portType]); }}

	
		public portType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new portType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_portType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_portType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class portType
	public class portType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_portType2]); }}

	
		public portType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class portType2
	public class portsType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_portsType]); }}

	
		public portsType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			name = new MemberAttribute_name (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_portsType_altova_name]);

			port = new MemberElement_port (this, streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_portsType_altova_port]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new portsType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public MemberAttribute_name name;
		public class MemberAttribute_name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_port port;
		public class MemberElement_port : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_port (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public portType this [int i] { get { return At(i);} } 
			public portType At(int index) {return new portType(owner.GetElementAt(info, index));}
			public portType First { get  {return new portType(owner.GetElementFirst(info));} }
			public portType Last { get {return new portType(owner.GetElementLast(info));} }
			public portType Append(){return new portType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new portType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class portsType
	public class nameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_nameType]); }}

	
		public nameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nameType
	public class urlType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_urlType]); }}

	
		public urlType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new urlType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_urlType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_altova_urlType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class urlType
	public class urlType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_urlType2]); }}

	
		public urlType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class urlType2
	public class nameType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_nameType2]); }}

	
		public nameType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nameType2
	public class nameType3 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_nameType3]); }}

	
		public nameType3(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nameType3
	public class nameType4 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_altova_nameType4]); }}

	
		public nameType4(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nameType4

namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}

	
		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES
	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_ENTITY]); }}

	
		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY
	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_ID]); }}

	
		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID
	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_IDREF]); }}

	
		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF
	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_IDREFS]); }}

	
		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS
	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_NCName]); }}

	
		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName
	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}

	
		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN
	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}

	
		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS
	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_NOTATION]); }}

	
		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION
	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_Name]); }}

	
		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name
	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_QName]); }}

	
		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName
	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}

	
		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType
	public class anyType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_anyType]); }}

	
		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = streamTypeDefine_TypeInfo.binder.Members[streamTypeDefine_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType
	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_anyURI]); }}

	
		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI
	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_base64Binary]); }}

	
		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary
	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_boolean]); }}

	
		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean
	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_byte2]); }}

	
		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2
	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_date]); }}

	
		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date
	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_dateTime]); }}

	
		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime
	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_decimal2]); }}

	
		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2
	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_double2]); }}

	
		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2
	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_duration]); }}

	
		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration
	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_float2]); }}

	
		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2
	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_gDay]); }}

	
		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay
	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_gMonth]); }}

	
		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth
	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}

	
		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay
	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_gYear]); }}

	
		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear
	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}

	
		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth
	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_hexBinary]); }}

	
		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary
	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_int2]); }}

	
		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2
	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_integer]); }}

	
		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer
	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_language]); }}

	
		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language
	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_long2]); }}

	
		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2
	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}

	
		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger
	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}

	
		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger
	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}

	
		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger
	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_normalizedString]); }}

	
		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString
	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}

	
		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger
	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_short2]); }}

	
		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2
	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_string2]); }}

	
		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2
	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_time]); }}

	
		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time
	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_token]); }}

	
		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token
	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}

	
		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte
	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}

	
		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt
	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}

	
		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong
	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(streamTypeDefine_TypeInfo.binder.Types[streamTypeDefine_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}

	
		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort

} // namespace xs


}
